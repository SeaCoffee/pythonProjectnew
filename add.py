from collections import Counter

# - є функція:
# def pr():
#     return 'Hello_boss_!!!'
#  написати декоратор до цієї функції, який замінює нижні підчеркування на пробіли і повертає це значення
# функцию pr менять не можно


# def decor(func):
#      def underscores(text):
#           print(text.replace('_', ' '))
#
#
#      return underscores
#
# @decor
# def pr():
#      return 'Hello_boss_!!!'
#
# pr('Hello_boss_!!!')


# вивести послідовність Фібоначі, кількість вказана в знінній,
#   наприклад: x = 10 -> 1 1 2 3 5 8 13 21 34 55
#   (число з послідовності - це сума попередніх двох чисел)
#



# fib1 = fib2 = 1
#
# n = int(input("enter number"))
#
# print(fib1, fib2, end=' ')
#
# for i in range(2, n):
#      fib1, fib2 = fib2, fib1 + fib2
#      print(fib2, end=' ')


 # порахувати кількість парних і непарних цифр числа,
 #   наприклад: х = 225688 -> п = 5, н = 1;
 #          х = 33294 -> п = 2, н = 3

# x = 225688
# result = map(int, str(x))
# p = []
# n = []
# for i in result:
#      if i % 2 == 0:
#           p.append(i)
#      elif i % 2 != 0:
#           n.append(i)
# print(p)
# print(n)

# прога, що виводить кількість кожного символа з введеної строки,
# наприклад: st = 'as 23 fdfdg544'  # введена строка

# 'a' -> 1  # вивело в консолі
# 's' -> 1
# ' ' -> 2
# '2' -> 1
# '3' -> 1
# 'f' -> 2
# 'd' -> 2
# 'g' -> 1
# '5' -> 1
# '4' -> 2


# text = "as 23 fdfdg544"
#
# print(*dict(Counter(text)).keys())
# for para in dict(Counter(text)).items():
#    print(para)

# генерируем лист с непарных чисел в порядке возрастания [1,3,5,7,9.....n]
# задача сделать c него лист листов такого плана:
#
# [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]  => [ [1], [3,5], [7,9,11], [13,15,17,19] ]
# [1, 3, 5, 7, 9, 11] => [[1], [3, 5], [7, 9, 11]]
# [1, 3, 5, 7, 9]  => [ [1], [3,5], [7,9]]
# [1, 3, 5, 7, 9, 11, 13]  => [[1], [3, 5], [7, 9, 11], [13]]




